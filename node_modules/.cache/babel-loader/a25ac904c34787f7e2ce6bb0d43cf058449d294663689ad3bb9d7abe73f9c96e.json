{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: []\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      console.log(newItem.id);\n      const existingItem = state.items.find(item => item.itemId === newItem.id);\n      console.log(existingItem);\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: newItem.quantity,\n          totalPrice: newItem.price * newItem.quantity,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity += 1;\n        existingItem.totalPrice += existingItem.price;\n      }\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      const neededItemIndex = state.items.findIndex(item => item.itemId === id);\n      if (state.items[neededItemIndex].quantity === 1) {\n        state.items = state.items.filter(item => item.itemId !== id);\n      } else {\n        state.items[neededItemIndex].quantity -= 1;\n        state.items[neededItemIndex].totalPrice -= state.items[neededItemIndex].price;\n      }\n    }\n  }\n});\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState: {\n    cartIsVisible: false,\n    notification: null\n  },\n  reducers: {\n    toggle(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification(state, action) {}\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cart: cartSlice.reducer,\n    ui: uiSlice.reducer\n  }\n});\nexport function sendCartData(cart) {\n  return async dispatch => {\n    async function sendRequest() {\n      const response = fetch('https://reactpractice-f5d9b-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed!');\n      }\n    }\n    try {\n      await sendRequest();\n    } catch (error) {}\n  };\n}\nexport const cartActions = cartSlice.actions;\nexport const uiActions = cartSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","cartSlice","name","initialState","items","reducers","addItem","state","action","newItem","payload","console","log","id","existingItem","find","item","itemId","push","price","quantity","totalPrice","title","removeItem","neededItemIndex","findIndex","filter","uiSlice","cartIsVisible","notification","toggle","showNotification","store","reducer","cart","ui","sendCartData","dispatch","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions","uiActions"],"sources":["/Users/nashtayalikhan/Downloads/01-starting-project 12/src/store/store.js"],"sourcesContent":["import { configureStore,createSlice } from \"@reduxjs/toolkit\";\n\n\n\nconst cartSlice = createSlice({\n    name:'cart',\n    initialState: {\n        items : []\n    },\n    reducers:{\n        addItem(state,action){\n            const newItem = action.payload\n            console.log(newItem.id)\n            const existingItem = state.items.find(item=>item.itemId===newItem.id)\n            console.log(existingItem)\n            if (!existingItem){\n                state.items.push({\n                    itemId: newItem.id,\n                    price: newItem.price,\n                    quantity:newItem.quantity,\n                    totalPrice: newItem.price* newItem.quantity,\n                    name: newItem.title\n                })\n            }else{\n                existingItem.quantity+=1\n                existingItem.totalPrice+= existingItem.price\n            }\n        },\n        removeItem(state,action){\n            const id = action.payload\n            const neededItemIndex = state.items.findIndex(item=>item.itemId===id)\n            if (state.items[neededItemIndex].quantity===1){\n                state.items = state.items.filter(item=>item.itemId!==id)\n            }else{\n                state.items[neededItemIndex].quantity-=1\n                state.items[neededItemIndex].totalPrice -= state.items[neededItemIndex].price\n            }\n        }\n    }\n})\n\nconst uiSlice = createSlice({\n    name: 'ui',\n    initialState: {\n        cartIsVisible: false,\n        notification: null\n    },\n    reducers:{\n        toggle(state){\n            state.cartIsVisible = !state.cartIsVisible\n        },\n        showNotification(state,action){\n\n        }\n    }\n})\n\nconst store = configureStore({\n    reducer: {cart: cartSlice.reducer, ui:uiSlice.reducer}\n})\n\nexport function sendCartData(cart){\n    return async (dispatch) => {\n        \n        async function sendRequest(){\n            const response = fetch('https://reactpractice-f5d9b-default-rtdb.firebaseio.com/cart.json',{\n                method: 'PUT',\n                body: JSON.stringify(cart)\n            })\n\n            if (!response.ok){\n                throw new Error('Sending cart data failed!')\n            }\n        }\n\n        try{\n            await sendRequest()\n        }catch (error){\n\n        }\n    }\n}\nexport const cartActions = cartSlice.actions\nexport const uiActions = cartSlice.actions\n\nexport default store"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}